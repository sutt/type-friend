### TEMPLATE =======================================================
# Run `./devscripts.sh make_nginx` 
# to populate this template to `nginx_example.conf`
# set API_DOMAIN, API_HOST, API_MAPPED_PORT in .env file.

# This is set for SSL listening so you'll need to generate certs.
# Use `./devscripts.sh init_certbot`

# To enable auto renewal with --webroot 
# add the following bash script in nginx hook:
#!/bin/bash
#systemctl reload nginx
#sudo chmod +x /etc/letsencrypt/renewal-hooks/post/reload-nginx.sh
### ================================================================


server {

    listen 443 ssl;
    
    server_name ${API_DOMAIN};

    location = /robots.txt {
        proxy_pass http://${API_HOST}:${API_MAPPED_PORT}/static/robots.txt;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location = /favicon.ico {
        proxy_pass http://${API_HOST}:${API_MAPPED_PORT}/static/img/favicon.ico;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location / {
        proxy_pass http://${API_HOST}:${API_MAPPED_PORT};
        
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # client ip addr to webserver
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # security headers
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "strict-origin-when-cross-origin";
        
        # only for websockets
        # proxy_set_header Upgrade $http_upgrade;
        # proxy_set_header Connection 'upgrade';
        # proxy_cache_bypass $http_upgrade;
    }

    # enable the certbot --webroot cert nenewal        
    location ^~ /.well-known/acme-challenge/ {
        root /var/www/html;
        try_files $uri =404;
    }

    # Certbot / SSL
    ssl_certificate /etc/letsencrypt/live/${API_DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${API_DOMAIN}/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}

server {
    listen 80;
    server_name ${API_DOMAIN};
    return 301 https://${API_DOMAIN}$request_uri;
}


# TODO - add some protection here
# limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
# limit_conn conn_limit_per_ip 10;
# http {
    # client_max_body_size 1M;
    # keepalive_timeout 10;
    # client_header_timeout 10;
    # client_body_timeout 10;
    # send_timeout 10;
# }